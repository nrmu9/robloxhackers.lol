// pages/api/fetchExploitStatus.tsx
import type { NextApiRequest, NextApiResponse } from 'next';
import axios from 'axios';

// Cache object to store data and expiration time
let cacheData: any = null;
let cacheExpiration: number = 0;

// Cache duration in milliseconds (20 minutes)
const CACHE_DURATION = 20 * 60 * 1000;

// Function to fetch data from the WEAO API
const fetchExploitStatuses = async () => {
  try {
    const response = await axios.get('http://weao.xyz/api/status/exploits', {
      headers: {
        'User-Agent': 'WEAO-3PService',
      },
    });
    return response.data;
  } catch (error) {
    throw new Error('Error fetching exploit statuses');
  }
};

// API handler function
export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  // Check if data is cached and still valid
  if (cacheData && Date.now() < cacheExpiration) {
    // Return cached data
    return res.status(200).json(cacheData);
  }

  try {
    // Fetch new data from the API
    const data = await fetchExploitStatuses();

    // Update cache with new data and set expiration
    cacheData = data;
    cacheExpiration = Date.now() + CACHE_DURATION;

    // Return the fresh data
    res.status(200).json(data);
  } catch (error: any) {
    res.status(500).json({ message: error.message });
  }
}
